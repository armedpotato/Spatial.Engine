name: CMake

on:
  push:
    branches:
      - master
      - feature/*
      - release/*
    tags:
      - 'v*'

env:
  BUILD_TYPE: Release
  CONAN_SYSREQUIRES_MODE: enabled

jobs:
  build:
    name: ${{ matrix.config.name }}
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows Latest MSVC",
            artifact: "windows.tar.xz",
            os: windows-latest,
            cc: "cl",
            cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
          - {
            name: "Ubuntu Latest CLang",
            artifact: "linux.tar.xz",
            os: ubuntu-latest,
            cc: "clang",
            cxx: "clang++"
          }
          - {
            name: "MacOS Latest Clang",
            artifact: "macOS.tar.xz",
            os: macos-latest,
            cc: "clang",
            cxx: "clang++"
          }

    steps:
      - uses: actions/checkout@v2

      - name: Install LLVM and Clang
        if: matrix.config.cc == 'clang'
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "10.0"
          directory: ${{ runner.temp }}/llvm

      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ">= 3.5"

      - name: Install Conan
        run: python -m pip install --upgrade pip conan

      - name: Setup Script
        shell: bash
        run: |
          python3 $GITHUB_WORKSPACE/setup.py

      - name: Create Build Directory
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        env:
          CC: ${{matrix.config.cc}}
          CXX: ${{matrix.config.cxx}}
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=./install

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE --target all

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest -C $BUILD_TYPE

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.config.artifact }}
          path: build/install/*

      - name: Publish Docs
        if: github.ref == 'ref/head/master'
        uses: peaceiris/actions-gh-pages@v3
        working-directory: ${{runner.workspace}}/build
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/html

  release:
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2

      - name: Upload to Release
        uses: meeDamian/github-release@2.0
        with:
          files: >
            windows.tar.xz
            linux.tar.xz
            macOS.tar.xz
          gzip: folders
          token: ${{ secrets.GITHUB_TOKEN }}